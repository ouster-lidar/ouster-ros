<launch>

  <!-- NOTE: pcap replay node does not implement clock -->
  <set_parameter name="use_sim_time" value="false" />

  <arg name="loop" default="false" description="request loop playback"/>
  <arg name="play_delay" default="0" description="playback start delay in seconds"/>
  <arg name="progress_update_freq" default="1.0"
    description="playback preogress update frequency per second"/>

  <arg name="ouster_ns" default="ouster"
    description="Override the default namespace of all ouster nodes"/>
  <arg name="timestamp_mode" default="TIME_FROM_INTERNAL_OSC"
    description="method used to timestamp measurements; possible values: {
    TIME_FROM_INTERNAL_OSC,
    TIME_FROM_SYNC_PULSE_IN,
    TIME_FROM_PTP_1588,
    TIME_FROM_ROS_TIME
    }"/>
   <arg name="ptp_utc_tai_offset" default="-37.0"
    description="UTC/TAI offset in seconds to apply when using TIME_FROM_PTP_1588"/>
  <arg name="metadata" description="path to write metadata file when receiving sensor data"/>
  <arg name="pcap_file" description="file name to use for the recorded bag file"/>
  <arg name="viz" default="true"
    description="whether to run a rviz"/>
  <arg name="rviz_config" default="$(find-pkg-share ouster_ros)/config/viz-reliable.rviz"
    description="optional rviz config file"/>

  <arg name="sensor_frame" default="os_sensor"
    description="sets name of choice for the sensor_frame tf frame, value can not be empty"/>
  <arg name="lidar_frame" default="os_lidar"
    description="sets name of choice for the os_lidar tf frame, value can not be empty"/>
  <arg name="imu_frame" default="os_imu"
      description="sets name of choice for the os_imu tf frame, value can not be empty"/>
  <arg name="point_cloud_frame" default=""
    description="which frame to be used when publishing PointCloud2 or LaserScan messages.
    Choose between the value of sensor_frame or lidar_frame, leaving this value empty
    would set lidar_frame to be the frame used when publishing these messages."/>
  <arg name="pub_static_tf" default="true"
    description="when this flag is set to True, the driver will broadcast the TF transforms
    for the imu/sensor/lidar frames. Prevent the driver from broadcasting TF transforms by
    setting this parameter to False."/>

  <let name="_use_metadata_file" value="$(eval '\'$(var metadata)\' != \'\'')"/>

  <arg name="use_system_default_qos" default="true"
    description="Use the default system QoS settings"/>

  <arg name="proc_mask" default="IMG|PCL|IMU|SCAN" description="
    use any combination of the 4 flags to enable or disable specific processors"/>

  <arg name="scan_ring" default="0" description="
    use this parameter in conjunction with the SCAN flag
    and choose a value the range [0, sensor_beams_count)"/>

  <arg name="point_type" default="original" description="point type for the generated point cloud;
   available options: {
    original,
    native,
    xyz,
    xyzi,
    xyzir
    }"/>

  <arg name="organized" default="true"
    description="generate an organzied point cloud"/>
  <arg name="destagger" default="true"
    description="enable or disable point cloud destaggering"/>

  <arg name="min_range" default="0.0"
    description="minimum lidar range to consider (meters)"/>
  <arg name="max_range" default="10000.0"
    description="minimum lidar range to consider (meters)"/>

  <group>
    <push-ros-namespace namespace="$(var ouster_ns)"/>
    <node if="$(var _use_metadata_file)" pkg="ouster_ros" exec="os_pcap" name="os_pcap"
        launch-prefix="bash -c 'sleep $(var play_delay); $0 $@'" output="screen">
      <param name="metadata" value="$(var metadata)"/>
      <param name="pcap_file" value="$(var pcap_file)"/>
      <param name="loop" value="$(var loop)"/>
      <param name="progress_update_freq" value="$(var progress_update_freq)"/>
      <param name="use_system_default_qos" value="$(var use_system_default_qos)"/>
    </node>
    <node_container pkg="rclcpp_components" exec="component_container_mt" name="os_container" output="screen" namespace="">
      <composable_node pkg="ouster_ros" plugin="ouster_ros::OusterCloud" name="os_cloud">
        <param name="sensor_frame" value="$(var sensor_frame)"/>
        <param name="lidar_frame" value="$(var lidar_frame)"/>
        <param name="imu_frame" value="$(var imu_frame)"/>
        <param name="point_cloud_frame" value="$(var point_cloud_frame)"/>
        <param name="pub_static_tf" value="$(var pub_static_tf)"/>
        <param name="timestamp_mode" value="$(var timestamp_mode)"/>
        <param name="ptp_utc_tai_offset" value="$(var ptp_utc_tai_offset)"/>
        <param name="use_system_default_qos" value="$(var use_system_default_qos)"/>
        <param name="proc_mask" value="$(var proc_mask)"/>
        <param name="scan_ring" value="$(var scan_ring)"/>
        <param name="point_type" value="$(var point_type)"/>
        <param name="organized" value="$(var organized)"/>
        <param name="destagger" value="$(var destagger)"/>
        <param name="min_range" value="$(var min_range)"/>
        <param name="max_range" value="$(var max_range)"/>
      </composable_node>
      <composable_node pkg="ouster_ros" plugin="ouster_ros::OusterImage" name="os_image">
        <param name="use_system_default_qos" value="$(var use_system_default_qos)"/>
        <param name="proc_mask" value="$(var proc_mask)"/>
      </composable_node>
    </node_container>
  </group>

  <include if="$(var viz)" file="$(find-pkg-share ouster_ros)/launch/rviz.launch.xml">
    <arg name="ouster_ns" value="$(var ouster_ns)"/>
    <arg name="rviz_config" value="$(var rviz_config)"/>
  </include>

</launch>
