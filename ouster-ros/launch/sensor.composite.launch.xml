<launch>

  <arg name="ouster_ns" default="ouster"
    description="Override the default namespace of all ouster nodes"/>
  <arg name="sensor_hostname"
    description="hostname or IP in dotted decimal form of the sensor"/>
  <arg name="udp_dest" default=""
    description="hostname or IP where the sensor will send data packets"/>
  <arg name="lidar_port" default="0"
    description="port to which the sensor should send lidar data"/>
  <arg name="imu_port" default="0"
    description="port to which the sensor should send imu data"/>
  <arg name="udp_profile_lidar" default=""
    description="lidar packet profile; possible values: {
    LEGACY,
    RNG19_RFL8_SIG16_NIR16_DUAL,
    RNG19_RFL8_SIG16_NIR16,
    RNG15_RFL8_NIR8
    }"/>
  <arg name="lidar_mode" default=""
    description="resolution and rate; possible values: {
    512x10,
    512x20,
    1024x10,
    1024x20,
    2048x10,
    4096x5
    }"/>
  <arg name="timestamp_mode" default=""
    description="method used to timestamp measurements; possible values: {
    TIME_FROM_INTERNAL_OSC,
    TIME_FROM_SYNC_PULSE_IN,
    TIME_FROM_PTP_1588,
    TIME_FROM_ROS_TIME
    }"/>
  <arg name="metadata" default=""
    description="path to write metadata file when receiving sensor data"/>
  <arg name="viz" default="true"
    description="whether to run a rviz"/>
  <arg name="rviz_config" default="$(find-pkg-share ouster_ros)/config/viz.rviz"
    description="optional rviz config file"/>
  <arg name="tf_prefix" default="" description="namespace for tf transforms"/>

  <group>
    <push-ros-namespace namespace="$(var ouster_ns)"/>
    <node_container pkg="rclcpp_components" exec="component_container_mt" name="os_container" output="screen" namespace="">
      <composable_node pkg="ouster_ros" plugin="ouster_ros::OusterSensor" name="os_sensor">
        <param name="sensor_hostname" value="$(var sensor_hostname)"/>
        <param name="udp_dest" value="$(var udp_dest)"/>
        <param name="mtp_dest" value=""/>
        <param name="mtp_main" value="false"/>
        <param name="lidar_port" value="$(var lidar_port)"/>
        <param name="imu_port" value="$(var imu_port)"/>
        <param name="udp_profile_lidar" value="$(var udp_profile_lidar)"/>
        <param name="lidar_mode" value="$(var lidar_mode)"/>
        <param name="timestamp_mode" value="$(var timestamp_mode)"/>
        <param name="metadata" value="$(var metadata)"/>
      </composable_node>
      <composable_node pkg="ouster_ros" plugin="ouster_ros::OusterCloud" name="os_cloud">
        <param name="tf_prefix" value="$(var tf_prefix)"/>
        <param name="timestamp_mode" value="$(var timestamp_mode)"/>
      </composable_node>
      <composable_node pkg="ouster_ros" plugin="ouster_ros::OusterImage" name="os_image"/>
    </node_container>
  </group>

  <!-- HACK: configure and activate the sensor node via a process execute since state
    transition is currently not availabe through launch.xml format -->
  <executable cmd="$(find-exec ros2) lifecycle set /$(var ouster_ns)/os_sensor configure"
    launch-prefix="bash -c 'sleep 0; $0 $@'" output="screen"/>
  <executable cmd="$(find-exec ros2) lifecycle set /$(var ouster_ns)/os_sensor activate"
    launch-prefix="bash -c 'sleep 1; $0 $@'" output="screen"/>

  <include if="$(var viz)" file="$(find-pkg-share ouster_ros)/launch/rviz.launch.xml">
    <arg name="ouster_ns" value="$(var ouster_ns)"/>
    <arg name="rviz_config" value="$(var rviz_config)"/>
    <arg name="_enable_static_tf_publishers" value="true"/>
  </include>

</launch>
